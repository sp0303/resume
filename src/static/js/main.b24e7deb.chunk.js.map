{"version":3,"sources":["person2.svg","resume.js","App.js","serviceWorker.js","index.js","person.svg"],"names":["module","exports","Resume","prop","info","data","profiles","location","id","className","basics","gender","src","profileIcon","alt","style","width","profileIcon1","name","fontStyle","role","href","email","mobile","summary","map","summaryValue","summaryIndex","key","education","educationValue","educationIndex","course","institute","result","Home","value","index","boxShadow","to","pathname","App","basename","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b24e7deb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/person2.27c8b601.svg\";","import React from \"react\";\r\nimport data from \"./data.json\";\r\nimport profileIcon from \"./person.svg\";\r\nimport profileIcon1 from \"./person2.svg\";\r\n\r\nfunction Resume(prop) {\r\n  let info = data.profiles[prop.location.data.id];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 m-2\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body p-2 card1\">\r\n              {info.basics.gender === \"male\" ? (\r\n                <img\r\n                  src={profileIcon}\r\n                  alt=\"Profile icon\"\r\n                  style={{ width: \"30%\" }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={profileIcon1}\r\n                  alt=\"Profile icon\"\r\n                  style={{ width: \"30%\" }}\r\n                />\r\n              )}\r\n              <h2>{info.basics.name}</h2>\r\n              <h5 className=\"text-secondary\" style={{ fontStyle: \"italic\" }}>\r\n                {info.basics.role}\r\n              </h5>\r\n              <hr />\r\n              <a href={\"mailto:\" + info.basics.email}>{info.basics.email}</a>\r\n              <br></br>\r\n              <a href={\"tel:\" + info.basics.mobile}> {info.basics.mobile}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-8 m-2\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body p-2 card2\">\r\n              <h2>Summary</h2>\r\n              <ul>\r\n                {info.summary.map((summaryValue, summaryIndex) => (\r\n                  <li key={summaryIndex}>{summaryValue}</li>\r\n                ))}\r\n              </ul>\r\n              <h3>Educational Qualifications</h3>\r\n              <hr />\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered\">\r\n                  <thead className=\"thead-dark\">\r\n                    <tr>\r\n                      <th> Degree </th>\r\n                      <th> Institute </th>\r\n                      <th> Percentage </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {info.education.map((educationValue, educationIndex) => (\r\n                      <tr key={educationValue}>\r\n                        <td>{educationValue.course}</td>\r\n                        <td> {educationValue.institute}</td>\r\n                        <td> {educationValue.result}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resume;\r\n","import React from \"react\";\nimport data from \"./data.json\";\nimport Resume from \"./resume\";\nimport profileIcon from \"./person.svg\";\nimport profileIcon1 from \"./person2.svg\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\n\n// import SC from './StatesConcept';\n\nlet App = () => {\n  return (\n    <BrowserRouter basename=\"/resume-react\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/resume\" component={Resume} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nlet Home = () => {\n  let profiles = data.profiles;\n  return (\n    <div className=\"row justify-content-center\" id=\"card-spl\">\n      {profiles.map((value, index) => (\n        <div className=\"col-lg-4 col-md-4 col-sm-10 mt-1\" key={index}>\n          {/* Card */}\n          <div\n            className=\"card card2\"\n            style={{ boxShadow: \"0px 8px 8px -8px #000\" }}\n          >\n            <div className=\"card-body text-center\">\n              {/* <img src={profileIcon} alt=\"Profile icon\" style={{width:\"30%\"}}/> */}\n              {value.basics.gender === \"male\" ? (\n                <img\n                  src={profileIcon}\n                  alt=\"Profile icon\"\n                  style={{ width: \"30%\" }}\n                />\n              ) : (\n                <img\n                  src={profileIcon1}\n                  alt=\"Profile icon\"\n                  style={{ width: \"30%\" }}\n                />\n              )}\n              <h3> {value.basics.name} </h3>\n              <h5 className=\"text-secondary\" style={{ fontStyle: \"italic\" }}>\n                {\" \"}\n                {value.basics.role}\n              </h5>{\" \"}\n              <hr />\n              <a href={\"mailto:\" + value.basics.email}>\n                {\" \"}\n                {value.basics.email}\n              </a>{\" \"}\n              <br></br>\n              <a href={\"tel:\" + value.basics.mobile}>\n                {\" \"}\n                {value.basics.mobile}\n              </a>{\" \"}\n              <br />\n              <Link\n                to={{ pathname: \"/resume\", data: { id: index } }}\n                className=\"btn btn-secondary text-white btn-block btn-sm\"\n              >\n                View profile\n              </Link>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/person.7ad1f30c.svg\";"],"sourceRoot":""}